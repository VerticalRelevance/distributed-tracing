[
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 86,
    "line": "def grant_tbac_to_user(self, lakeformation, user_arn, tag_key, tag_values):"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 95,
    "line": "def grant_tbac_to_account("
  },
  {
    "search_term": "if ",
    "category": "Decision Points",
    "level": 4,
    "line_number": 106,
    "line": "if account_type == \\\\\"producer\\\\\\":"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 84,
    "line": "return False"
  },
  {
    "search_term": "else:",
    "category": "Decision Points",
    "level": 4,
    "line_number": 82,
    "line": "else:"
  },
  {
    "search_term": "raise",
    "category": "Error Handling",
    "level": 3,
    "line_number": 113,
    "line": "raise Exception("
  },
  {
    "search_term": "for ",
    "category": "Loop Controls",
    "level": 7,
    "line_number": 129,
    "line": "for f\\\\\\\"tag policy response status for table policy : {resp['ResponseMetadata']['HTTPStatusCode']}\\\\\\\":"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 163,
    "line": "return glue.start_crawler(Name=crawler_name)"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 161,
    "line": "def rwun_glue_crawler(self, glue, crawler_name):"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 165,
    "line": "def catalog_table_names(self, glue, dbname):"
  },
  {
    "search_term": "try",
    "category": "Error Handling",
    "level": 3,
    "line_number": 172,
    "line": "try:"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 173,
    "line": "return ["
  },
  {
    "search_term": "for ",
    "category": "Loop Controls",
    "level": 7,
    "line_number": 174,
    "line": "x[\\\\\\\"Name\\\\\\\"] for x in glue.get_tables(DatabaseName=dbname)[\\\\\\\"TableList\\\\\\\"]"
  },
  {
    "search_term": "except",
    "category": "Error Handling",
    "level": 3,
    "line_number": 176,
    "line": "except glue.exceptions.EntityNotFoundException:"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 180,
    "line": "return []"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 182,
    "line": "def get_glue_crawler(self, glue, crawler_name):"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 183,
    "line": "return glue.get_crawler(Name=crawler_name)"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 185,
    "line": "def get_glue_crawler_state(self, glue, crawler_name):"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 186,
    "line": "return self.get_glue_crawler(glue, crawler_name)[\\\\\\\"Crawler\\\\\\\"][\\\\\\\"State\\\\\\\"]"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 188,
    "line": "def wait_for_crawler_state(self, glue, crawler_name, state=\\\\\\\"READY\\\\\\\", wait_for=40):"
  },
  {
    "search_term": "for ",
    "category": "Loop Controls",
    "level": 7,
    "line_number": 189,
    "line": "logging.debug(f\\\\\\\" waiting for crawler state {state} \\\\\")"
  },
  {
    "search_term": "while ",
    "category": "Loop Controls",
    "level": 7,
    "line_number": 191,
    "line": "while i < wait_for:"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 196,
    "line": "return True"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 202,
    "line": "def load_variables(cls):"
  },
  {
    "search_term": "open",
    "category": "External Interactions",
    "level": 5,
    "line_number": 203,
    "line": "with open(cls.VARIABLES, \\\\\\"r\\\\\\") as f:"
  },
  {
    "search_term": "with ",
    "category": "Context Managers",
    "level": 8,
    "line_number": 203,
    "line": "with open(cls.VARIABLES, \\\\\\"r\\\\\\") as f:"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 204,
    "line": "return json.loads(f.read())"
  },
  {
    "search_term": "read",
    "category": "External Interactions",
    "level": 5,
    "line_number": 204,
    "line": "return json.loads(f.read())"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 207,
    "line": "def build_account_id_map(cls, sessions):"
  },
  {
    "search_term": "for ",
    "category": "Loop Controls",
    "level": 7,
    "line_number": 209,
    "line": "for profile, _ in cls.PROFILES:"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 214,
    "line": "return acct_id_map"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 216,
    "line": "def update_lf_tag(self, lakeformation, tag_key, tag_values):"
  },
  {
    "search_term": "if ",
    "category": "Decision Points",
    "level": 4,
    "line_number": 218,
    "line": "tagvalues_to_add = [x for x in tag_values if x not in actual_tagvalues]"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 220,
    "line": "return lakeformation.update_lf_tag("
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 223,
    "line": "return \\\\\\"Tag and values already exist\\\\\\""
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 225,
    "line": "def create_lf_tag(self, lakeformation, tag_key, tag_values):"
  },
  {
    "search_term": "try",
    "category": "Error Handling",
    "level": 3,
    "line_number": 226,
    "line": "try:"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 227,
    "line": "return lakeformation.create_lf_tag(TagKey=tag_key, TagValues=tag_values)"
  },
  {
    "search_term": "for ",
    "category": "Loop Controls",
    "level": 7,
    "line_number": 218,
    "line": "tagvalues_to_add = [x for x in tag_values if x not in actual_tagvalues]"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 234,
    "line": "def tag_database(lakeformation, database_name, tag_key, tag_values):"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 245,
    "line": "return resp"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 248,
    "line": "def tag_table(lakeformation, table_name, database_name, tag_key, tag_values):"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 259,
    "line": "return resp"
  },
  {
    "search_term": "def ",
    "category": "Function Entry",
    "level": 1,
    "line_number": 261,
    "line": "def central_glue_tasks(self):"
  },
  {
    "search_term": "return",
    "category": "Function Exit",
    "level": 2,
    "line_number": 375,
    "line": "return vars(parser.parse_args())"
  },
  {
    "search_term": "if ",
    "category": "Decision Points",
    "level": 4,
    "line_number": 378,
    "line": "if __name__ == \\\\\\"__main__\\\\\\":"
  }
]
